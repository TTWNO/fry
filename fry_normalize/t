   Compiling num-bigfloat v1.7.1
   Compiling num2words v1.2.0
   Compiling fry_normalize v0.1.0 (/home/tait/Documents/fry/fry_normalize)
warning: unused variable: `is_currency`
  --> fry_normalize/src/lib.rs:35:9
   |
35 |     let is_currency = values.find('$') == Some(0);
   |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_is_currency`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `is_point`
  --> fry_normalize/src/lib.rs:36:9
   |
36 |     let is_point = values.find('.').is_some();
   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_is_point`

warning: unused variable: `f`
  --> fry_normalize/src/lib.rs:37:9
   |
37 |     let f = Num2Words::new(BigFloat::parse(&values).unwrap());
   |         ^ help: if this is intentional, prefix it with an underscore: `_f`

warning: constant `ABBREVIATIONS` is never used
  --> fry_normalize/src/lib.rs:13:7
   |
13 | const ABBREVIATIONS: &'static str = include_str!("../data/abbr.txt");
   |       ^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: constant `NUMBER_SYMBOLS` is never used
  --> fry_normalize/src/lib.rs:14:7
   |
14 | const NUMBER_SYMBOLS: &'static str = "0123456789$.,";
   |       ^^^^^^^^^^^^^^

warning: function `generate_abbr_table` is never used
  --> fry_normalize/src/lib.rs:16:4
   |
16 | fn generate_abbr_table() -> Option<BTreeMap<&'static str, &'static str>> {
   |    ^^^^^^^^^^^^^^^^^^^

warning: function `number_conversion` is never used
  --> fry_normalize/src/lib.rs:31:4
   |
31 | fn number_conversion(slc: &str) -> String {
   |    ^^^^^^^^^^^^^^^^^

warning: `fry_normalize` (lib) generated 7 warnings (run `cargo fix --lib -p fry_normalize` to apply 3 suggestions)
    Finished dev [unoptimized + debuginfo] target(s) in 1.05s
